"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[1310],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>N});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function m(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=n.createContext({}),o=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},p=function(e){var t=o(e.components);return n.createElement(s.Provider,{value:t},e.children)},k="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,p=m(e,["components","mdxType","originalType","parentName"]),k=o(a),d=l,N=k["".concat(s,".").concat(d)]||k[d]||u[d]||i;return a?n.createElement(N,r(r({ref:t},p),{},{components:a})):n.createElement(N,r({ref:t},p))}));function N(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=a.length,r=new Array(i);r[0]=d;var m={};for(var s in t)hasOwnProperty.call(t,s)&&(m[s]=t[s]);m.originalType=e,m[k]="string"==typeof e?e:l,r[1]=m;for(var o=2;o<i;o++)r[o]=a[o];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},9089:(e,t,a)=>{a.r(t),a.d(t,{contentTitle:()=>s,default:()=>k,frontMatter:()=>m,toc:()=>o});var n=a(7462),l=(a(7294),a(3905)),i=a(4866),r=a(5162);const m={title:"MetaMask JSON-RPC API Reference",description:null,toc_min_heading_level:2,toc_max_heading_level:2},s=void 0,o=[{value:"eth_subscribe",id:"eth_subscribe",level:2},{value:"Params (2)",id:"params-2",level:3},{value:"Result",id:"result",level:3},{value:"Example",id:"example",level:3},{value:"Request",id:"request",level:4},{value:"Response",id:"response",level:4},{value:"Request",id:"request-1",level:4},{value:"Response",id:"response-1",level:4},{value:"eth_unsubscribe",id:"eth_unsubscribe",level:2},{value:"Params (1)",id:"params-1",level:3},{value:"Result",id:"result-1",level:3},{value:"Example",id:"example-1",level:3},{value:"Request",id:"request-2",level:4},{value:"Response",id:"response-2",level:4},{value:"Request",id:"request-3",level:4},{value:"Response",id:"response-3",level:4},{value:"wallet_addEthereumChain",id:"wallet_addethereumchain",level:2},{value:"Params (1)",id:"params-1-1",level:3},{value:"Result",id:"result-2",level:3},{value:"Example",id:"example-2",level:3},{value:"Request",id:"request-4",level:4},{value:"Response",id:"response-4",level:4},{value:"Request",id:"request-5",level:4},{value:"Response",id:"response-5",level:4},{value:"wallet_switchEthereumChain",id:"wallet_switchethereumchain",level:2},{value:"Params (1)",id:"params-1-2",level:3},{value:"Result",id:"result-3",level:3},{value:"Example",id:"example-3",level:3},{value:"Request",id:"request-6",level:4},{value:"Response",id:"response-6",level:4},{value:"Request",id:"request-7",level:4},{value:"Response",id:"response-7",level:4},{value:"wallet_requestPermissions",id:"wallet_requestpermissions",level:2},{value:"Params (1)",id:"params-1-3",level:3},{value:"Result",id:"result-4",level:3},{value:"Example",id:"example-4",level:3},{value:"Request",id:"request-8",level:4},{value:"Response",id:"response-8",level:4},{value:"Request",id:"request-9",level:4},{value:"Response",id:"response-9",level:4},{value:"wallet_getPermissions",id:"wallet_getpermissions",level:2},{value:"Params (0)",id:"params-0",level:3},{value:"Result",id:"result-5",level:3},{value:"wallet_registerOnboarding",id:"wallet_registeronboarding",level:2},{value:"Params (0)",id:"params-0-1",level:3},{value:"Result",id:"result-6",level:3},{value:"wallet_watchAsset",id:"wallet_watchasset",level:2},{value:"Params (2)",id:"params-2-1",level:3},{value:"Result",id:"result-7",level:3},{value:"Example",id:"example-5",level:3},{value:"Request",id:"request-10",level:4},{value:"Response",id:"response-10",level:4},{value:"Request",id:"request-11",level:4},{value:"Response",id:"response-11",level:4},{value:"eth_decrypt",id:"eth_decrypt",level:2},{value:"Params (2)",id:"params-2-2",level:3},{value:"Result",id:"result-8",level:3},{value:"eth_getEncryptionPublicKey",id:"eth_getencryptionpublickey",level:2},{value:"Params (1)",id:"params-1-4",level:3},{value:"Result",id:"result-9",level:3},{value:"eth_accounts",id:"eth_accounts",level:2},{value:"Params (0)",id:"params-0-2",level:3},{value:"Result",id:"result-10",level:3},{value:"eth_signTypedData_v4",id:"eth_signtypeddata_v4",level:2},{value:"Params (2)",id:"params-2-3",level:3},{value:"Result",id:"result-11",level:3},{value:"Example",id:"example-6",level:3},{value:"Request",id:"request-12",level:4},{value:"Response",id:"response-12",level:4},{value:"Request",id:"request-13",level:4},{value:"Response",id:"response-13",level:4},{value:"personal_sign",id:"personal_sign",level:2},{value:"Params (2)",id:"params-2-4",level:3},{value:"Result",id:"result-12",level:3},{value:"eth_getBlockByHash",id:"eth_getblockbyhash",level:2},{value:"Params (2)",id:"params-2-5",level:3},{value:"Result",id:"result-13",level:3},{value:"eth_getBlockByNumber",id:"eth_getblockbynumber",level:2},{value:"Params (2)",id:"params-2-6",level:3},{value:"Result",id:"result-14",level:3},{value:"eth_getBlockTransactionCountByHash",id:"eth_getblocktransactioncountbyhash",level:2},{value:"Params (1)",id:"params-1-5",level:3},{value:"Result",id:"result-15",level:3},{value:"eth_getBlockTransactionCountByNumber",id:"eth_getblocktransactioncountbynumber",level:2},{value:"Params (1)",id:"params-1-6",level:3},{value:"Result",id:"result-16",level:3},{value:"eth_getUncleCountByBlockHash",id:"eth_getunclecountbyblockhash",level:2},{value:"Params (1)",id:"params-1-7",level:3},{value:"Result",id:"result-17",level:3},{value:"eth_getUncleCountByBlockNumber",id:"eth_getunclecountbyblocknumber",level:2},{value:"Params (1)",id:"params-1-8",level:3},{value:"Result",id:"result-18",level:3},{value:"eth_chainId",id:"eth_chainid",level:2},{value:"Params (0)",id:"params-0-3",level:3},{value:"Result",id:"result-19",level:3},{value:"eth_syncing",id:"eth_syncing",level:2},{value:"Params (0)",id:"params-0-4",level:3},{value:"Result",id:"result-20",level:3},{value:"eth_coinbase",id:"eth_coinbase",level:2},{value:"Params (0)",id:"params-0-5",level:3},{value:"Result",id:"result-21",level:3},{value:"eth_accounts",id:"eth_accounts-1",level:2},{value:"Params (0)",id:"params-0-6",level:3},{value:"Result",id:"result-22",level:3},{value:"eth_blockNumber",id:"eth_blocknumber",level:2},{value:"Params (0)",id:"params-0-7",level:3},{value:"Result",id:"result-23",level:3},{value:"eth_call",id:"eth_call",level:2},{value:"Params (2)",id:"params-2-7",level:3},{value:"Result",id:"result-24",level:3},{value:"eth_estimateGas",id:"eth_estimategas",level:2},{value:"Params (2)",id:"params-2-8",level:3},{value:"Result",id:"result-25",level:3},{value:"eth_createAccessList",id:"eth_createaccesslist",level:2},{value:"Params (2)",id:"params-2-9",level:3},{value:"Result",id:"result-26",level:3},{value:"eth_gasPrice",id:"eth_gasprice",level:2},{value:"Params (0)",id:"params-0-8",level:3},{value:"Result",id:"result-27",level:3},{value:"eth_maxPriorityFeePerGas",id:"eth_maxpriorityfeepergas",level:2},{value:"Params (0)",id:"params-0-9",level:3},{value:"Result",id:"result-28",level:3},{value:"eth_feeHistory",id:"eth_feehistory",level:2},{value:"Params (3)",id:"params-3",level:3},{value:"Result",id:"result-29",level:3},{value:"eth_newFilter",id:"eth_newfilter",level:2},{value:"Params (1)",id:"params-1-9",level:3},{value:"Result",id:"result-30",level:3},{value:"eth_newBlockFilter",id:"eth_newblockfilter",level:2},{value:"Params (0)",id:"params-0-10",level:3},{value:"Result",id:"result-31",level:3},{value:"eth_newPendingTransactionFilter",id:"eth_newpendingtransactionfilter",level:2},{value:"Params (0)",id:"params-0-11",level:3},{value:"Result",id:"result-32",level:3},{value:"eth_uninstallFilter",id:"eth_uninstallfilter",level:2},{value:"Params (1)",id:"params-1-10",level:3},{value:"Result",id:"result-33",level:3},{value:"eth_getFilterChanges",id:"eth_getfilterchanges",level:2},{value:"Params (1)",id:"params-1-11",level:3},{value:"Result",id:"result-34",level:3},{value:"eth_getFilterLogs",id:"eth_getfilterlogs",level:2},{value:"Params (1)",id:"params-1-12",level:3},{value:"Result",id:"result-35",level:3},{value:"eth_getLogs",id:"eth_getlogs",level:2},{value:"Params (1)",id:"params-1-13",level:3},{value:"Result",id:"result-36",level:3},{value:"eth_mining",id:"eth_mining",level:2},{value:"Params (0)",id:"params-0-12",level:3},{value:"Result",id:"result-37",level:3},{value:"eth_hashrate",id:"eth_hashrate",level:2},{value:"Params (0)",id:"params-0-13",level:3},{value:"Result",id:"result-38",level:3},{value:"eth_getWork",id:"eth_getwork",level:2},{value:"Params (0)",id:"params-0-14",level:3},{value:"Result",id:"result-39",level:3},{value:"eth_submitWork",id:"eth_submitwork",level:2},{value:"Params (3)",id:"params-3-1",level:3},{value:"Result",id:"result-40",level:3},{value:"eth_submitHashrate",id:"eth_submithashrate",level:2},{value:"Params (2)",id:"params-2-10",level:3},{value:"Result",id:"result-41",level:3},{value:"eth_getBalance",id:"eth_getbalance",level:2},{value:"Params (2)",id:"params-2-11",level:3},{value:"Result",id:"result-42",level:3},{value:"eth_getStorageAt",id:"eth_getstorageat",level:2},{value:"Params (3)",id:"params-3-2",level:3},{value:"Result",id:"result-43",level:3},{value:"eth_getTransactionCount",id:"eth_gettransactioncount",level:2},{value:"Params (2)",id:"params-2-12",level:3},{value:"Result",id:"result-44",level:3},{value:"eth_getCode",id:"eth_getcode",level:2},{value:"Params (2)",id:"params-2-13",level:3},{value:"Result",id:"result-45",level:3},{value:"eth_getProof",id:"eth_getproof",level:2},{value:"Params (3)",id:"params-3-3",level:3},{value:"Result",id:"result-46",level:3},{value:"eth_sendTransaction",id:"eth_sendtransaction",level:2},{value:"Params (1)",id:"params-1-14",level:3},{value:"Result",id:"result-47",level:3},{value:"eth_sendRawTransaction",id:"eth_sendrawtransaction",level:2},{value:"Params (1)",id:"params-1-15",level:3},{value:"Result",id:"result-48",level:3},{value:"eth_getTransactionByHash",id:"eth_gettransactionbyhash",level:2},{value:"Params (1)",id:"params-1-16",level:3},{value:"Result",id:"result-49",level:3},{value:"eth_getTransactionByBlockHashAndIndex",id:"eth_gettransactionbyblockhashandindex",level:2},{value:"Params (2)",id:"params-2-14",level:3},{value:"Result",id:"result-50",level:3},{value:"eth_getTransactionByBlockNumberAndIndex",id:"eth_gettransactionbyblocknumberandindex",level:2},{value:"Params (2)",id:"params-2-15",level:3},{value:"Result",id:"result-51",level:3},{value:"eth_getTransactionReceipt",id:"eth_gettransactionreceipt",level:2},{value:"Params (1)",id:"params-1-17",level:3},{value:"Result",id:"result-52",level:3}],p={toc:o};function k(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_subscribe"},"eth_subscribe"),(0,l.kt)("small",null,"Subscribes to specific Ethereum events, returning a subscription ID used to receive notifications.")),(0,l.kt)("p",null,"The eth_subscribe method allows clients to subscribe to specific events on the Ethereum network, such as new blocks, new pending transactions, or changes in the state of an account. When an event occurs, a notification is sent to the client with the corresponding data. To stop receiving notifications, the client can unsubscribe using the eth_unsubscribe method."),(0,l.kt)("h3",{id:"params-2"},"Params (2)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"subscriptionType")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The type of subscription to create. Must be one of:",(0,l.kt)("inlineCode",{parentName:"li"},"newHeads"),": new block headers - ",(0,l.kt)("inlineCode",{parentName:"li"},"logs"),": logs matching a filter object - ",(0,l.kt)("inlineCode",{parentName:"li"},"newPendingTransactions"),": new pending transactions - ",(0,l.kt)("inlineCode",{parentName:"li"},"syncing"),": changes in syncing status")))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"filterOptions"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"An optional object containing filter options specific to the subscription type. Only applicable for 'logs' subscription type."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"address"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"A single address or an array of addresses to filter the logs by. Optional."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"topics"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of"),(0,l.kt)("li",{parentName:"ul"},"An array of topics to filter the logs by. Optional.")))))),(0,l.kt)("h3",{id:"result"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"subscriptionId"),":  A unique subscription ID that can be used to unsubscribe or identify incoming notifications.",(0,l.kt)("inlineCode",{parentName:"p"},"string")),(0,l.kt)("h3",{id:"example"},"Example"),(0,l.kt)(i.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,l.kt)("h4",{id:"request"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "method": "eth_subscribe",\n    "params": [\n        "newHeads"\n    ]\n}\n')),(0,l.kt)("h4",{id:"response"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": "0x1b84f2cdf29a204b79e450c1939b30c1"\n}\n'))),(0,l.kt)(r.Z,{value:"javascript",label:"Javascript",mdxType:"TabItem"},(0,l.kt)("h4",{id:"request-1"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'const result = await ethereum.request({\n  method: "eth_subscribe",\n  params: [\n    "newHeads"\n  ]\n});\n')),(0,l.kt)("h4",{id:"response-1"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'console.log(result);\n/**\n * Outputs:\n * "0x1b84f2cdf29a204b79e450c1939b30c1"\n */\n'))))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_unsubscribe"},"eth_unsubscribe"),(0,l.kt)("small",null,"Unsubscribes from a specific Ethereum event, using the subscription ID provided by eth_subscribe.")),(0,l.kt)("p",null,"The eth_unsubscribe method allows clients to unsubscribe from specific events on the Ethereum network, to which they have previously subscribed using the eth_subscribe method. The client needs to provide the subscription ID obtained from eth_subscribe to stop receiving notifications for the corresponding event."),(0,l.kt)("h3",{id:"params-1"},"Params (1)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"subscriptionId")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The unique subscription ID obtained from the eth_subscribe method, used to identify the subscription to be unsubscribed.")))),(0,l.kt)("h3",{id:"result-1"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"unsubscribed"),":  A boolean value indicating whether the unsubscription was successful.",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("h3",{id:"example-1"},"Example"),(0,l.kt)(i.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,l.kt)("h4",{id:"request-2"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "method": "eth_unsubscribe",\n    "params": [\n        "0x1b84f2cdf29a204b79e450c1939b30c1"\n    ]\n}\n')),(0,l.kt)("h4",{id:"response-2"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": true\n}\n'))),(0,l.kt)(r.Z,{value:"javascript",label:"Javascript",mdxType:"TabItem"},(0,l.kt)("h4",{id:"request-3"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'const result = await ethereum.request({\n  method: "eth_unsubscribe",\n  params: [\n    "0x1b84f2cdf29a204b79e450c1939b30c1"\n  ]\n});\n')),(0,l.kt)("h4",{id:"response-3"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"console.log(result);\n/**\n * Outputs:\n * true\n */\n"))))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"wallet_addethereumchain"},"wallet_addEthereumChain"),(0,l.kt)("small",null,"Adds an Ethereum chain to the wallet.")),(0,l.kt)("p",null,"Creates a confirmation asking the user to add the specified chain to the wallet application. The caller must specify a chain ID and some chain metadata. The wallet application may refuse or accept the request. ",(0,l.kt)("inlineCode",{parentName:"p"},"null")," is returned if the chain is added, and an error otherwise. Introduced by ",(0,l.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-3085"},"EIP 3085"),"."),(0,l.kt)("h3",{id:"params-1-1"},"Params (1)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"AddEthereumChainParameter"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"chainId"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"MUST specify the integer ID of the chain as a hexadecimal string, per the eth_chainId Ethereum RPC method. The wallet SHOULD compare the specified chain ID value with the eth_chainId return value from the endpoint. If these values aren't identical, the wallet MUST reject the request."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"blockExplorerUrls"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of"),(0,l.kt)("li",{parentName:"ul"},"If provided, MUST specify one or more URLs pointing to block explorer sites for the chain."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"chainName"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"If provided, MUST specify a human-readable name for the chain."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"iconUrls"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of"),(0,l.kt)("li",{parentName:"ul"},"If provided, MUST specify one or more URLs pointing to reasonably sized images that can be used to visually identify the chain."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"nativeCurrency"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"If provided, MUST describe the native currency of the chain using the name, symbol, and decimals fields."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"decimals"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"integer"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"A non-negative integer."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"name"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"SHOULD be human-readable."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"symbol"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"SHOULD be human-readable."))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"rpcUrls"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of")))))),(0,l.kt)("h3",{id:"result-2"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"AddEthereumChainResult"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"null")),(0,l.kt)("h3",{id:"example-2"},"Example"),(0,l.kt)(i.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,l.kt)("h4",{id:"request-4"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "method": "wallet_addEthereumChain",\n    "params": [\n        {\n            "chainId": "0x64",\n            "chainName": "Gnosis",\n            "rpcUrls": [\n                "https://dai.poa.network"\n            ],\n            "iconUrls": [\n                "https://xdaichain.com/fake/example/url/xdai.svg",\n                "https://xdaichain.com/fake/example/url/xdai.png"\n            ],\n            "nativeCurrency": {\n                "name": "xDAI",\n                "symbol": "xDAI",\n                "decimals": 18\n            },\n            "blockExplorerUrls": [\n                "https://blockscout.com/poa/xdai/"\n            ]\n        }\n    ]\n}\n')),(0,l.kt)("h4",{id:"response-4"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": "null"\n}\n'))),(0,l.kt)(r.Z,{value:"javascript",label:"Javascript",mdxType:"TabItem"},(0,l.kt)("h4",{id:"request-5"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'const result = await ethereum.request({\n  method: "wallet_addEthereumChain",\n  params: [\n    {\n      "chainId": "0x64",\n      "chainName": "Gnosis",\n      "rpcUrls": [\n        "https://dai.poa.network"\n      ],\n      "iconUrls": [\n        "https://xdaichain.com/fake/example/url/xdai.svg",\n        "https://xdaichain.com/fake/example/url/xdai.png"\n      ],\n      "nativeCurrency": {\n        "name": "xDAI",\n        "symbol": "xDAI",\n        "decimals": 18\n      },\n      "blockExplorerUrls": [\n        "https://blockscout.com/poa/xdai/"\n      ]\n    }\n  ]\n});\n')),(0,l.kt)("h4",{id:"response-5"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'console.log(result);\n/**\n * Outputs:\n * "null"\n */\n'))))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"wallet_switchethereumchain"},"wallet_switchEthereumChain"),(0,l.kt)("small",null,"Switches the wallet's active Ethereum chain.")),(0,l.kt)("p",null,"Requests that the wallet switches its active Ethereum chain. Introduced by ",(0,l.kt)("a",{parentName:"p",href:"https://ethereum-magicians.org/t/eip-3326-wallet-switchethereumchain"},"EIP 3326"),"."),(0,l.kt)("h3",{id:"params-1-2"},"Params (1)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"SwitchEthereumChainParameter"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"chainId"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"MUST specify the integer ID of the chain as a hexadecimal string, per the eth_chainId Ethereum RPC method.")))))),(0,l.kt)("h3",{id:"result-3"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"SwitchEthereumChainResult"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"null")),(0,l.kt)("h3",{id:"example-3"},"Example"),(0,l.kt)(i.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,l.kt)("h4",{id:"request-6"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "method": "wallet_switchEthereumChain",\n    "params": [\n        {\n            "chainId": "0x64"\n        }\n    ]\n}\n')),(0,l.kt)("h4",{id:"response-6"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": "null"\n}\n'))),(0,l.kt)(r.Z,{value:"javascript",label:"Javascript",mdxType:"TabItem"},(0,l.kt)("h4",{id:"request-7"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'const result = await ethereum.request({\n  method: "wallet_switchEthereumChain",\n  params: [\n    {\n      "chainId": "0x64"\n    }\n  ]\n});\n')),(0,l.kt)("h4",{id:"response-7"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'console.log(result);\n/**\n * Outputs:\n * "null"\n */\n'))))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"wallet_requestpermissions"},"wallet_requestPermissions"),(0,l.kt)("small",null,"Requests additional permissions.")),(0,l.kt)("p",null,"Requests additional permissions from the user. Introduced by ",(0,l.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-2255"},"EIP-2255"),"."),(0,l.kt)("h3",{id:"params-1-3"},"Params (1)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"requestPermissionsObject")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"eth_accounts"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"object"))))),(0,l.kt)("h3",{id:"result-4"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"PermissionsList"),": "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Array of")),(0,l.kt)("h3",{id:"example-4"},"Example"),(0,l.kt)(i.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,l.kt)("h4",{id:"request-8"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "method": "wallet_requestPermissions",\n    "params": [\n        {\n            "eth_accounts": {}\n        }\n    ]\n}\n')),(0,l.kt)("h4",{id:"response-8"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": {}\n}\n'))),(0,l.kt)(r.Z,{value:"javascript",label:"Javascript",mdxType:"TabItem"},(0,l.kt)("h4",{id:"request-9"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'const result = await ethereum.request({\n  method: "wallet_requestPermissions",\n  params: [\n    {\n      "eth_accounts": {}\n    }\n  ]\n});\n')),(0,l.kt)("h4",{id:"response-9"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"console.log(result);\n/**\n * Outputs:\n * {}\n */\n"))))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"wallet_getpermissions"},"wallet_getPermissions"),(0,l.kt)("small",null,"Gets the user's permissions.")),(0,l.kt)("p",null,"Gets the user's permissions. Introduced by ",(0,l.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-2255"},"EIP-2255"),"."),(0,l.kt)("h3",{id:"params-0"},"Params (0)"),(0,l.kt)("h3",{id:"result-5"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"PermissionsList"),": "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Array of"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"wallet_registeronboarding"},"wallet_registerOnboarding"),(0,l.kt)("small",null,"Redirects the user back to the site after onboarding.")),(0,l.kt)("p",null,"Registers the requesting site with MetaMask as the initiator of onboarding, enabling MetaMask to redirect the user back to the site after onboarding. Returns a promise that resolves to ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),", or rejects if there's an error. Instead of calling this method directly, you should use the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/MetaMask/metamask-onboarding"},(0,l.kt)("inlineCode",{parentName:"a"},"@metamask/onboarding"))," library."),(0,l.kt)("h3",{id:"params-0-1"},"Params (0)"),(0,l.kt)("h3",{id:"result-6"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"RegisterOnboardingResult"),":  ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," if the request was successful, ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," otherwise.",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"wallet_watchasset"},"wallet_watchAsset"),(0,l.kt)("small",null,"Tracks a token in MetaMask.")),(0,l.kt)("p",null,"Requests that the user track the specified token in MetaMask. Returns a boolean indicating if the token was successfully added. Once added, the token is indistinguishable from those added using legacy methods, such as a centralized registry. Introduced by ",(0,l.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-747"},"EIP-747"),"."),(0,l.kt)("h3",{id:"params-2-1"},"Params (2)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Currently only supports ERC-20 tokens.")))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"options"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"address"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The address of the token contract."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"symbol"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"A ticker symbol or shorthand, up to 11 characters."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"decimals"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"number"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The number of token decimals."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"image"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"A string URL of the token logo.")))))),(0,l.kt)("h3",{id:"result-7"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"WatchAssetResult"),":  ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," if the token was added, ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," otherwise.",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("h3",{id:"example-5"},"Example"),(0,l.kt)(i.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,l.kt)("h4",{id:"request-10"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "method": "wallet_watchAsset",\n    "params": [\n        "ERC20",\n        {\n            "address": "0xb60e8dd61c5d32be8058bb8eb970870f07233155",\n            "symbol": "FOO",\n            "decimals": 18,\n            "image": "https: //foo.io/token-image.svg"\n        }\n    ]\n}\n')),(0,l.kt)("h4",{id:"response-10"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": true\n}\n'))),(0,l.kt)(r.Z,{value:"javascript",label:"Javascript",mdxType:"TabItem"},(0,l.kt)("h4",{id:"request-11"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'const result = await ethereum.request({\n  method: "wallet_watchAsset",\n  params: [\n    "ERC20",\n    {\n      "address": "0xb60e8dd61c5d32be8058bb8eb970870f07233155",\n      "symbol": "FOO",\n      "decimals": 18,\n      "image": "https: //foo.io/token-image.svg"\n    }\n  ]\n});\n')),(0,l.kt)("h4",{id:"response-11"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"console.log(result);\n/**\n * Outputs:\n * true\n */\n"))))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_decrypt"},"eth_decrypt"),(0,l.kt)("small",null,"Decrypts an encrypted message.")),(0,l.kt)("p",null,"Requests that MetaMask decrypt the specified encrypted message. The message must have been encrypted using the public encryption key of the specified Ethereum address. Returns a promise that resolves to the decrypted message, or rejects if the decryption attempt fails."),(0,l.kt)("h3",{id:"params-2-2"},"Params (2)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"EncryptedMessage")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),":    The encrypted message to decrypt.",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Address")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),":    The address of the Ethereum account that can decrypt the message.",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("h3",{id:"result-8"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"PermissionsList"),": "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Array of"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_getencryptionpublickey"},"eth_getEncryptionPublicKey"),(0,l.kt)("small",null,"Gets a public key used for encryption.")),(0,l.kt)("p",null,"Requests that the user share their public encryption key. Returns a public encryption key, or rejects if the user denies the request. The public key is computed from entropy associated with the specified user account, using the NaCl implementation of the ",(0,l.kt)("inlineCode",{parentName:"p"},"X25519_XSalsa20_Poly1305")," algorithm."),(0,l.kt)("h3",{id:"params-1-4"},"Params (1)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Address")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),":    The address of the Ethereum account that can decrypt the message.",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("h3",{id:"result-9"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"EncryptionKey"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_accounts"},"eth_accounts"),(0,l.kt)("small",null,"Gets a list of addresses for the user's accounts.")),(0,l.kt)("p",null,"Returns a list of addresses for the accounts owned by the user."),(0,l.kt)("h3",{id:"params-0-2"},"Params (0)"),(0,l.kt)("h3",{id:"result-10"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"AddressList"),": "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Array of"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_signtypeddata_v4"},"eth_signTypedData_v4"),(0,l.kt)("small",null,"Presents a structured data message for the user to sign.")),(0,l.kt)("p",null,"Presents a data message for the user to sign in a structured and readable format and returns the signed response. Introduced By ",(0,l.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-712"},"EIP-712"),"."),(0,l.kt)("h3",{id:"params-2-3"},"Params (2)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Address")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),":    The address of the requested signing account.",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"TypedData")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"types"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"EIP712Domain"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of"),(0,l.kt)("li",{parentName:"ul"},"An array specifying one or more of the following domain separator values: 1) 'name' - The user-readable name of signing domain, i.e., the name of the dapp or the protocol. 2) 'version' - The current major version of the signing domain. 3) 'chainId' - The EIP-155 chain ID. 4) 'verifyingContract' - The address of the contract that will verify the signature. 5) 'salt' - A disambiguating salt for the protocol."))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"domain"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Contains the domain separator values specified in the EIP712Domain type."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"primaryType"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"message"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"object"))))),(0,l.kt)("h3",{id:"result-11"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Signature"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string")),(0,l.kt)("h3",{id:"example-6"},"Example"),(0,l.kt)(i.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,l.kt)("h4",{id:"request-12"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "method": "eth_signTypedData_v4",\n    "params": [\n        "0x0000000000000000000000000000000000000000",\n        {\n            "types": {\n                "EIP712Domain": [\n                    {\n                        "name": "name",\n                        "type": "string"\n                    },\n                    {\n                        "name": "version",\n                        "type": "string"\n                    },\n                    {\n                        "name": "chainId",\n                        "type": "uint256"\n                    },\n                    {\n                        "name": "verifyingContract",\n                        "type": "address"\n                    }\n                ],\n                "Person": [\n                    {\n                        "name": "name",\n                        "type": "string"\n                    },\n                    {\n                        "name": "wallet",\n                        "type": "address"\n                    }\n                ],\n                "Mail": [\n                    {\n                        "name": "from",\n                        "type": "Person"\n                    },\n                    {\n                        "name": "to",\n                        "type": "Person"\n                    },\n                    {\n                        "name": "contents",\n                        "type": "string"\n                    }\n                ]\n            },\n            "primaryType": "Mail",\n            "domain": {\n                "name": "Ether Mail",\n                "version": "1",\n                "chainId": 1,\n                "verifyingContract": "0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC"\n            },\n            "message": {\n                "from": {\n                    "name": "Cow",\n                    "wallet": "0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826"\n                },\n                "to": {\n                    "name": "Bob",\n                    "wallet": "0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB"\n                },\n                "contents": "Hello, Bob!"\n            }\n        }\n    ]\n}\n')),(0,l.kt)("h4",{id:"response-12"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": "0x4355c47d63924e8a72e509b65029052eb6c299d53a04e167c5775fd466751c9d07299936d304c153f6443dfa05f40ff007d72911b6f72307f996231605b915621c"\n}\n'))),(0,l.kt)(r.Z,{value:"javascript",label:"Javascript",mdxType:"TabItem"},(0,l.kt)("h4",{id:"request-13"},"Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'const result = await ethereum.request({\n  method: "eth_signTypedData_v4",\n  params: [\n    "0x0000000000000000000000000000000000000000",\n    {\n      "types": {\n        "EIP712Domain": [\n          {\n            "name": "name",\n            "type": "string"\n          },\n          {\n            "name": "version",\n            "type": "string"\n          },\n          {\n            "name": "chainId",\n            "type": "uint256"\n          },\n          {\n            "name": "verifyingContract",\n            "type": "address"\n          }\n        ],\n        "Person": [\n          {\n            "name": "name",\n            "type": "string"\n          },\n          {\n            "name": "wallet",\n            "type": "address"\n          }\n        ],\n        "Mail": [\n          {\n            "name": "from",\n            "type": "Person"\n          },\n          {\n            "name": "to",\n            "type": "Person"\n          },\n          {\n            "name": "contents",\n            "type": "string"\n          }\n        ]\n      },\n      "primaryType": "Mail",\n      "domain": {\n        "name": "Ether Mail",\n        "version": "1",\n        "chainId": 1,\n        "verifyingContract": "0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC"\n      },\n      "message": {\n        "from": {\n          "name": "Cow",\n          "wallet": "0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826"\n        },\n        "to": {\n          "name": "Bob",\n          "wallet": "0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB"\n        },\n        "contents": "Hello, Bob!"\n      }\n    }\n  ]\n});\n')),(0,l.kt)("h4",{id:"response-13"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'console.log(result);\n/**\n * Outputs:\n * "0x4355c47d63924e8a72e509b65029052eb6c299d53a04e167c5775fd466751c9d07299936d304c153f6443dfa05f40ff007d72911b6f72307f996231605b915621c"\n */\n'))))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"personal_sign"},"personal_sign"),(0,l.kt)("small",null,"Presents a plain text signature challenge to the user.")),(0,l.kt)("p",null,"Presents a plain text signature challenge to the user and returns the signed response. Equivalent to ",(0,l.kt)("inlineCode",{parentName:"p"},"eth_sign")," on some other wallets, and prepends a safe prefix to the signed message to prevent the challenge tricking users into signing a financial transaction. This method requires that the user has granted permission to interact with their account first, so make sure to call ",(0,l.kt)("inlineCode",{parentName:"p"},"eth_requestAccounts")," first."),(0,l.kt)("h3",{id:"params-2-4"},"Params (2)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Challenge")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),":    A hex-encoded UTF-8 string to present to the user. See how to encode a string like this in the ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/danfinlay/browser-string-hexer"},(0,l.kt)("inlineCode",{parentName:"a"},"browser-string-hexer"))," module.",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Address")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),":    The address of the requested signing account.",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("h3",{id:"result-12"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Signature"),":  A hex-encoded 129-byte array starting with ",(0,l.kt)("inlineCode",{parentName:"p"},"0x"),".",(0,l.kt)("inlineCode",{parentName:"p"},"string"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_getblockbyhash"},"eth_getBlockByHash"),(0,l.kt)("small",null,"Returns information about a block by hash.")),(0,l.kt)("h3",{id:"params-2-5"},"Params (2)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Block hash")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Hydrated transactions")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"boolean"))),(0,l.kt)("h3",{id:"result-13"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Block information"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"object")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"parentHash"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"sha3Uncles"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"miner"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"stateRoot"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"transactionsRoot"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"receiptsRoot"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"logsBloom"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"difficulty"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"number"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gasLimit"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gasUsed"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"timestamp"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"extraData"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"mixHash"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"nonce"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"totalDifficulty"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"baseFeePerGas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"withdrawalsRoot"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"size"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"transactions"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Any Of",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"Transaction hashes")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"Full transactions")))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"withdrawals"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"Withdrawals")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"uncles"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"Uncles")))))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_getblockbynumber"},"eth_getBlockByNumber"),(0,l.kt)("small",null,"Returns information about a block by number.")),(0,l.kt)("h3",{id:"params-2-6"},"Params (2)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Block")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"One Of  ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block number  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block tag  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"earliest"),": The lowest numbered block the client has available; ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized"),": The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; ",(0,l.kt)("inlineCode",{parentName:"li"},"safe"),": The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; ",(0,l.kt)("inlineCode",{parentName:"li"},"latest"),": The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; ",(0,l.kt)("inlineCode",{parentName:"li"},"pending"),": A sample next block built by the client on top of ",(0,l.kt)("inlineCode",{parentName:"li"},"latest")," and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"safe")," block MUST be responded to with ",(0,l.kt)("inlineCode",{parentName:"li"},"-39001: Unknown block")," error")))))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Hydrated transactions")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"boolean"))),(0,l.kt)("h3",{id:"result-14"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Block information"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"object")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"parentHash"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"sha3Uncles"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"miner"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"stateRoot"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"transactionsRoot"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"receiptsRoot"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"logsBloom"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"difficulty"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"number"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gasLimit"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gasUsed"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"timestamp"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"extraData"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"mixHash"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"nonce"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"totalDifficulty"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"baseFeePerGas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"withdrawalsRoot"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"size"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"transactions"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Any Of",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"Transaction hashes")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"Full transactions")))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"withdrawals"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"Withdrawals")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"uncles"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"Uncles")))))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_getblocktransactioncountbyhash"},"eth_getBlockTransactionCountByHash"),(0,l.kt)("small",null,"Returns the number of transactions in a block from a block matching the given block hash.")),(0,l.kt)("h3",{id:"params-1-5"},"Params (1)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Block hash"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("h3",{id:"result-15"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Transaction count"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_getblocktransactioncountbynumber"},"eth_getBlockTransactionCountByNumber"),(0,l.kt)("small",null,"Returns the number of transactions in a block matching the given block number.")),(0,l.kt)("h3",{id:"params-1-6"},"Params (1)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Block"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"One Of  ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block number  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block tag  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"earliest"),": The lowest numbered block the client has available; ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized"),": The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; ",(0,l.kt)("inlineCode",{parentName:"li"},"safe"),": The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; ",(0,l.kt)("inlineCode",{parentName:"li"},"latest"),": The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; ",(0,l.kt)("inlineCode",{parentName:"li"},"pending"),": A sample next block built by the client on top of ",(0,l.kt)("inlineCode",{parentName:"li"},"latest")," and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"safe")," block MUST be responded to with ",(0,l.kt)("inlineCode",{parentName:"li"},"-39001: Unknown block")," error")))))),(0,l.kt)("h3",{id:"result-16"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Transaction count"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_getunclecountbyblockhash"},"eth_getUncleCountByBlockHash"),(0,l.kt)("small",null,"Returns the number of uncles in a block from a block matching the given block hash.")),(0,l.kt)("h3",{id:"params-1-7"},"Params (1)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Block hash"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("h3",{id:"result-17"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Uncle count"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_getunclecountbyblocknumber"},"eth_getUncleCountByBlockNumber"),(0,l.kt)("small",null,"Returns the number of transactions in a block matching the given block number.")),(0,l.kt)("h3",{id:"params-1-8"},"Params (1)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Block"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"One Of  ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block number  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block tag  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"earliest"),": The lowest numbered block the client has available; ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized"),": The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; ",(0,l.kt)("inlineCode",{parentName:"li"},"safe"),": The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; ",(0,l.kt)("inlineCode",{parentName:"li"},"latest"),": The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; ",(0,l.kt)("inlineCode",{parentName:"li"},"pending"),": A sample next block built by the client on top of ",(0,l.kt)("inlineCode",{parentName:"li"},"latest")," and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"safe")," block MUST be responded to with ",(0,l.kt)("inlineCode",{parentName:"li"},"-39001: Unknown block")," error")))))),(0,l.kt)("h3",{id:"result-18"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Uncle count"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_chainid"},"eth_chainId"),(0,l.kt)("small",null,"Returns the chain ID of the current network.")),(0,l.kt)("h3",{id:"params-0-3"},"Params (0)"),(0,l.kt)("h3",{id:"result-19"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Chain ID"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_syncing"},"eth_syncing"),(0,l.kt)("small",null,"Returns an object with data about the sync status or false.")),(0,l.kt)("h3",{id:"params-0-4"},"Params (0)"),(0,l.kt)("h3",{id:"result-20"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Syncing status"),": "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"One Of  ",(0,l.kt)("inlineCode",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"startingBlock"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"currentBlock"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"highestBlock"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"boolean")),(0,l.kt)("li",{parentName:"ul"},"Should always return false if not syncing."))))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_coinbase"},"eth_coinbase"),(0,l.kt)("small",null,"Returns the client coinbase address.")),(0,l.kt)("h3",{id:"params-0-5"},"Params (0)"),(0,l.kt)("h3",{id:"result-21"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Coinbase address"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_accounts-1"},"eth_accounts"),(0,l.kt)("small",null,"Returns a list of addresses owned by client.")),(0,l.kt)("h3",{id:"params-0-6"},"Params (0)"),(0,l.kt)("h3",{id:"result-22"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Accounts"),": "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"Accounts")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_blocknumber"},"eth_blockNumber"),(0,l.kt)("small",null,"Returns the number of most recent block.")),(0,l.kt)("h3",{id:"params-0-7"},"Params (0)"),(0,l.kt)("h3",{id:"result-23"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Block number"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_call"},"eth_call"),(0,l.kt)("small",null,"Executes a new message call immediately without creating a transaction on the block chain.")),(0,l.kt)("h3",{id:"params-2-7"},"Params (2)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Transaction")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"nonce"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"to"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"from"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"value"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"input"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gasPrice"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The gas price willing to be paid by the sender in wei"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"maxPriorityFeePerGas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Maximum fee per gas the sender is willing to pay to miners in wei"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"maxFeePerGas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"accessList"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"accessList")),(0,l.kt)("li",{parentName:"ul"},"EIP-2930 access list"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"chainId"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Chain ID that this transaction is valid on.")))))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Block"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Any Of",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block number  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block tag  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"earliest"),": The lowest numbered block the client has available; ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized"),": The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; ",(0,l.kt)("inlineCode",{parentName:"li"},"safe"),": The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; ",(0,l.kt)("inlineCode",{parentName:"li"},"latest"),": The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; ",(0,l.kt)("inlineCode",{parentName:"li"},"pending"),": A sample next block built by the client on top of ",(0,l.kt)("inlineCode",{parentName:"li"},"latest")," and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"safe")," block MUST be responded to with ",(0,l.kt)("inlineCode",{parentName:"li"},"-39001: Unknown block")," error"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block hash  ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))))))),(0,l.kt)("h3",{id:"result-24"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Return data"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_estimategas"},"eth_estimateGas"),(0,l.kt)("small",null,"Generates and returns an estimate of how much gas is necessary to allow the transaction to complete.")),(0,l.kt)("h3",{id:"params-2-8"},"Params (2)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Transaction")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"nonce"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"to"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"from"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"value"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"input"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gasPrice"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The gas price willing to be paid by the sender in wei"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"maxPriorityFeePerGas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Maximum fee per gas the sender is willing to pay to miners in wei"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"maxFeePerGas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"accessList"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"accessList")),(0,l.kt)("li",{parentName:"ul"},"EIP-2930 access list"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"chainId"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Chain ID that this transaction is valid on.")))))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Block"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"One Of  ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block number  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block tag  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"earliest"),": The lowest numbered block the client has available; ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized"),": The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; ",(0,l.kt)("inlineCode",{parentName:"li"},"safe"),": The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; ",(0,l.kt)("inlineCode",{parentName:"li"},"latest"),": The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; ",(0,l.kt)("inlineCode",{parentName:"li"},"pending"),": A sample next block built by the client on top of ",(0,l.kt)("inlineCode",{parentName:"li"},"latest")," and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"safe")," block MUST be responded to with ",(0,l.kt)("inlineCode",{parentName:"li"},"-39001: Unknown block")," error")))))),(0,l.kt)("h3",{id:"result-25"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Gas used"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_createaccesslist"},"eth_createAccessList"),(0,l.kt)("small",null,"Generates an access list for a transaction.")),(0,l.kt)("h3",{id:"params-2-9"},"Params (2)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Transaction")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"nonce"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"to"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"from"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"value"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"input"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gasPrice"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The gas price willing to be paid by the sender in wei"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"maxPriorityFeePerGas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Maximum fee per gas the sender is willing to pay to miners in wei"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"maxFeePerGas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"accessList"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"accessList")),(0,l.kt)("li",{parentName:"ul"},"EIP-2930 access list"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"chainId"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Chain ID that this transaction is valid on.")))))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Block"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"One Of  ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block number  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block tag  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"earliest"),": The lowest numbered block the client has available; ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized"),": The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; ",(0,l.kt)("inlineCode",{parentName:"li"},"safe"),": The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; ",(0,l.kt)("inlineCode",{parentName:"li"},"latest"),": The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; ",(0,l.kt)("inlineCode",{parentName:"li"},"pending"),": A sample next block built by the client on top of ",(0,l.kt)("inlineCode",{parentName:"li"},"latest")," and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"safe")," block MUST be responded to with ",(0,l.kt)("inlineCode",{parentName:"li"},"-39001: Unknown block")," error")))))),(0,l.kt)("h3",{id:"result-26"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Gas used"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"object")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"accessList"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"accessList")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"error"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gasUsed"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_gasprice"},"eth_gasPrice"),(0,l.kt)("small",null,"Returns the current price per gas in wei.")),(0,l.kt)("h3",{id:"params-0-8"},"Params (0)"),(0,l.kt)("h3",{id:"result-27"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Gas price"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_maxpriorityfeepergas"},"eth_maxPriorityFeePerGas"),(0,l.kt)("small",null,"Returns the current maxPriorityFeePerGas per gas in wei.")),(0,l.kt)("h3",{id:"params-0-9"},"Params (0)"),(0,l.kt)("h3",{id:"result-28"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Max priority fee per gas"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_feehistory"},"eth_feeHistory"),(0,l.kt)("small",null,"Transaction fee history")),(0,l.kt)("p",null,"Returns transaction base fee per gas and effective priority fee per gas for the requested/supported block range."),(0,l.kt)("h3",{id:"params-3"},"Params (3)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"blockCount")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),":    Requested range of blocks. Clients will return less than the requested range if not all blocks are available.",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"newestBlock")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),":    Highest block of the requested range.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"One Of  ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block number  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block tag  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"earliest"),": The lowest numbered block the client has available; ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized"),": The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; ",(0,l.kt)("inlineCode",{parentName:"li"},"safe"),": The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; ",(0,l.kt)("inlineCode",{parentName:"li"},"latest"),": The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; ",(0,l.kt)("inlineCode",{parentName:"li"},"pending"),": A sample next block built by the client on top of ",(0,l.kt)("inlineCode",{parentName:"li"},"latest")," and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"safe")," block MUST be responded to with ",(0,l.kt)("inlineCode",{parentName:"li"},"-39001: Unknown block")," error")))))),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"rewardPercentiles")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),":    A monotonically increasing list of percentile values. For each block in the requested range, the transactions will be sorted in ascending order by effective tip per gas and the coresponding effective tip for the percentile will be determined, accounting for gas consumed.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"rewardPercentiles"))))),(0,l.kt)("h3",{id:"result-29"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"feeHistoryResult"),":  Fee history for the returned block range. This can be a subsection of the requested range if not all blocks are available.",(0,l.kt)("inlineCode",{parentName:"p"},"object")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Fee history results."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"oldestBlock"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Lowest number block of returned range."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"baseFeePerGas"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"baseFeePerGasArray")),(0,l.kt)("li",{parentName:"ul"},"An array of block base fees per gas. This includes the next block after the newest of the returned range, because this value can be derived from the newest block. Zeroes are returned for pre-EIP-1559 blocks."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"reward"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"rewardArray")),(0,l.kt)("li",{parentName:"ul"},"A two-dimensional array of effective priority fees per gas at the requested block percentiles."))))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_newfilter"},"eth_newFilter"),(0,l.kt)("small",null,"Creates a filter object, based on filter options, to notify when the state changes (logs).")),(0,l.kt)("h3",{id:"params-1-9"},"Params (1)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Filter"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"fromBlock"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"toBlock"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"address"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"One Of  ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Address  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"Addresses")))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"topics"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"Topics"))))))),(0,l.kt)("h3",{id:"result-30"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Filter Identifier"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_newblockfilter"},"eth_newBlockFilter"),(0,l.kt)("small",null,"Creates a filter in the node, to notify when a new block arrives.")),(0,l.kt)("h3",{id:"params-0-10"},"Params (0)"),(0,l.kt)("h3",{id:"result-31"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Filter Identifier"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_newpendingtransactionfilter"},"eth_newPendingTransactionFilter"),(0,l.kt)("small",null,"Creates a filter in the node, to notify when new pending transactions arrive.")),(0,l.kt)("h3",{id:"params-0-11"},"Params (0)"),(0,l.kt)("h3",{id:"result-32"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Filter Identifier"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_uninstallfilter"},"eth_uninstallFilter"),(0,l.kt)("small",null,"Uninstalls a filter with given id.")),(0,l.kt)("h3",{id:"params-1-10"},"Params (1)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Filter Identifier"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("h3",{id:"result-33"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Success"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_getfilterchanges"},"eth_getFilterChanges"),(0,l.kt)("small",null,"Polling method for a filter, which returns an array of logs which occurred since last poll.")),(0,l.kt)("h3",{id:"params-1-11"},"Params (1)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Filter Identifier"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("h3",{id:"result-34"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Log objects"),": "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"One Of  ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"new block hashes")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"new transaction hashes")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"new logs")))))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_getfilterlogs"},"eth_getFilterLogs"),(0,l.kt)("small",null,"Returns an array of all logs matching filter with given id.")),(0,l.kt)("h3",{id:"params-1-12"},"Params (1)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Filter Identifier"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("h3",{id:"result-35"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Log objects"),": "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"One Of  ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"new block hashes")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"new transaction hashes")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"new logs")))))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_getlogs"},"eth_getLogs"),(0,l.kt)("small",null,"Returns an array of all logs matching filter with given id.")),(0,l.kt)("h3",{id:"params-1-13"},"Params (1)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Filter"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"fromBlock"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"toBlock"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"address"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"One Of  ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Address  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"Addresses")))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"topics"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"Topics"))))))),(0,l.kt)("h3",{id:"result-36"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Log objects"),": "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"One Of  ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"new block hashes")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"new transaction hashes")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"new logs")))))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_mining"},"eth_mining"),(0,l.kt)("small",null,"Returns whether the client is actively mining new blocks.")),(0,l.kt)("h3",{id:"params-0-12"},"Params (0)"),(0,l.kt)("h3",{id:"result-37"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Mining status"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_hashrate"},"eth_hashrate"),(0,l.kt)("small",null,"Returns the number of hashes per second that the node is mining with.")),(0,l.kt)("h3",{id:"params-0-13"},"Params (0)"),(0,l.kt)("h3",{id:"result-38"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Mining status"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_getwork"},"eth_getWork"),(0,l.kt)("small",null,"Returns the hash of the current block, the seedHash, and the boundary condition to be met (\u201ctarget\u201d).")),(0,l.kt)("h3",{id:"params-0-14"},"Params (0)"),(0,l.kt)("h3",{id:"result-39"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Current work"),": "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Array of"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_submitwork"},"eth_submitWork"),(0,l.kt)("small",null,"Used for submitting a proof-of-work solution.")),(0,l.kt)("h3",{id:"params-3-1"},"Params (3)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"nonce")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"hash")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"digest")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("h3",{id:"result-40"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Success"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_submithashrate"},"eth_submitHashrate"),(0,l.kt)("small",null,"Used for submitting mining hashrate.")),(0,l.kt)("h3",{id:"params-2-10"},"Params (2)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Hashrate")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"ID")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("h3",{id:"result-41"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Success"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_getbalance"},"eth_getBalance"),(0,l.kt)("small",null,"Returns the balance of the account of given address.")),(0,l.kt)("h3",{id:"params-2-11"},"Params (2)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Address")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Block"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Any Of",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block number  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block tag  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"earliest"),": The lowest numbered block the client has available; ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized"),": The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; ",(0,l.kt)("inlineCode",{parentName:"li"},"safe"),": The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; ",(0,l.kt)("inlineCode",{parentName:"li"},"latest"),": The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; ",(0,l.kt)("inlineCode",{parentName:"li"},"pending"),": A sample next block built by the client on top of ",(0,l.kt)("inlineCode",{parentName:"li"},"latest")," and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"safe")," block MUST be responded to with ",(0,l.kt)("inlineCode",{parentName:"li"},"-39001: Unknown block")," error"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block hash  ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))))))),(0,l.kt)("h3",{id:"result-42"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Balance"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_getstorageat"},"eth_getStorageAt"),(0,l.kt)("small",null,"Returns the value from a storage position at a given address.")),(0,l.kt)("h3",{id:"params-3-2"},"Params (3)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Address")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Storage slot")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Block"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Any Of",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block number  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block tag  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"earliest"),": The lowest numbered block the client has available; ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized"),": The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; ",(0,l.kt)("inlineCode",{parentName:"li"},"safe"),": The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; ",(0,l.kt)("inlineCode",{parentName:"li"},"latest"),": The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; ",(0,l.kt)("inlineCode",{parentName:"li"},"pending"),": A sample next block built by the client on top of ",(0,l.kt)("inlineCode",{parentName:"li"},"latest")," and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"safe")," block MUST be responded to with ",(0,l.kt)("inlineCode",{parentName:"li"},"-39001: Unknown block")," error"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block hash  ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))))))),(0,l.kt)("h3",{id:"result-43"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Value"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_gettransactioncount"},"eth_getTransactionCount"),(0,l.kt)("small",null,"Returns the number of transactions sent from an address.")),(0,l.kt)("h3",{id:"params-2-12"},"Params (2)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Address")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Block"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Any Of",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block number  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block tag  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"earliest"),": The lowest numbered block the client has available; ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized"),": The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; ",(0,l.kt)("inlineCode",{parentName:"li"},"safe"),": The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; ",(0,l.kt)("inlineCode",{parentName:"li"},"latest"),": The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; ",(0,l.kt)("inlineCode",{parentName:"li"},"pending"),": A sample next block built by the client on top of ",(0,l.kt)("inlineCode",{parentName:"li"},"latest")," and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"safe")," block MUST be responded to with ",(0,l.kt)("inlineCode",{parentName:"li"},"-39001: Unknown block")," error"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block hash  ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))))))),(0,l.kt)("h3",{id:"result-44"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Transaction count"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_getcode"},"eth_getCode"),(0,l.kt)("small",null,"Returns code at a given address.")),(0,l.kt)("h3",{id:"params-2-13"},"Params (2)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Address")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Block"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Any Of",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block number  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block tag  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"earliest"),": The lowest numbered block the client has available; ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized"),": The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; ",(0,l.kt)("inlineCode",{parentName:"li"},"safe"),": The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; ",(0,l.kt)("inlineCode",{parentName:"li"},"latest"),": The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; ",(0,l.kt)("inlineCode",{parentName:"li"},"pending"),": A sample next block built by the client on top of ",(0,l.kt)("inlineCode",{parentName:"li"},"latest")," and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"safe")," block MUST be responded to with ",(0,l.kt)("inlineCode",{parentName:"li"},"-39001: Unknown block")," error"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block hash  ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))))))),(0,l.kt)("h3",{id:"result-45"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Bytecode"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_getproof"},"eth_getProof"),(0,l.kt)("small",null,"Returns the merkle proof for a given account and optionally some storage keys.")),(0,l.kt)("h3",{id:"params-3-3"},"Params (3)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Address")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"StorageKeys")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"Storage keys"))))),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Block")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Any Of",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block number  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block tag  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"earliest"),": The lowest numbered block the client has available; ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized"),": The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; ",(0,l.kt)("inlineCode",{parentName:"li"},"safe"),": The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; ",(0,l.kt)("inlineCode",{parentName:"li"},"latest"),": The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; ",(0,l.kt)("inlineCode",{parentName:"li"},"pending"),": A sample next block built by the client on top of ",(0,l.kt)("inlineCode",{parentName:"li"},"latest")," and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"safe")," block MUST be responded to with ",(0,l.kt)("inlineCode",{parentName:"li"},"-39001: Unknown block")," error"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block hash  ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))))))),(0,l.kt)("h3",{id:"result-46"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Account"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"object")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"address"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"accountProof"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"accountProof")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"balance"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"codeHash"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"nonce"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"storageHash"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"storageProof"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"Storage proofs")))))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_sendtransaction"},"eth_sendTransaction"),(0,l.kt)("small",null,"Signs and submits a transaction.")),(0,l.kt)("h3",{id:"params-1-14"},"Params (1)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Transaction")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"nonce"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"to"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"from"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"value"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"input"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gasPrice"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The gas price willing to be paid by the sender in wei"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"maxPriorityFeePerGas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Maximum fee per gas the sender is willing to pay to miners in wei"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"maxFeePerGas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"accessList"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"accessList")),(0,l.kt)("li",{parentName:"ul"},"EIP-2930 access list"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"chainId"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Chain ID that this transaction is valid on.")))))),(0,l.kt)("h3",{id:"result-47"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Transaction hash"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_sendrawtransaction"},"eth_sendRawTransaction"),(0,l.kt)("small",null,"Submits a raw transaction.")),(0,l.kt)("h3",{id:"params-1-15"},"Params (1)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Transaction")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("h3",{id:"result-48"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Transaction hash"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string"))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_gettransactionbyhash"},"eth_getTransactionByHash"),(0,l.kt)("small",null,"Returns the information about a transaction requested by transaction hash.")),(0,l.kt)("h3",{id:"params-1-16"},"Params (1)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Transaction hash")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("h3",{id:"result-49"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Transaction information"),": "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"All Of",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"blockHash"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"blockNumber"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"from"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"hash"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"transactionIndex"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"AND"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"One Of  ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"All Of",(0,l.kt)("inlineCode",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"nonce"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"to"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"value"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"input"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"maxPriorityFeePerGas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Maximum fee per gas the sender is willing to pay to miners in wei"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"maxFeePerGas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"accessList"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"accessList")),(0,l.kt)("li",{parentName:"ul"},"EIP-2930 access list"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"chainId"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Chain ID that this transaction is valid on."))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"AND"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"yParity"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"r"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"s"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"All Of",(0,l.kt)("inlineCode",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"nonce"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"to"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"value"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"input"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gasPrice"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The gas price willing to be paid by the sender in wei"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"accessList"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"accessList")),(0,l.kt)("li",{parentName:"ul"},"EIP-2930 access list"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"chainId"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Chain ID that this transaction is valid on."))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"AND"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"yParity"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"r"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"s"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"All Of",(0,l.kt)("inlineCode",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"nonce"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"to"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"value"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"input"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gasPrice"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The gas price willing to be paid by the sender in wei"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"chainId"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Chain ID that this transaction is valid on."))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"AND"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"v"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"r"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"s"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))))))))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_gettransactionbyblockhashandindex"},"eth_getTransactionByBlockHashAndIndex"),(0,l.kt)("small",null,"Returns information about a transaction by block hash and transaction index position.")),(0,l.kt)("h3",{id:"params-2-14"},"Params (2)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Block hash")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Transaction index")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("h3",{id:"result-50"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Transaction information"),": "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"All Of",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"blockHash"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"blockNumber"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"from"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"hash"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"transactionIndex"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"AND"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"One Of  ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"All Of",(0,l.kt)("inlineCode",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"nonce"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"to"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"value"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"input"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"maxPriorityFeePerGas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Maximum fee per gas the sender is willing to pay to miners in wei"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"maxFeePerGas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"accessList"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"accessList")),(0,l.kt)("li",{parentName:"ul"},"EIP-2930 access list"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"chainId"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Chain ID that this transaction is valid on."))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"AND"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"yParity"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"r"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"s"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"All Of",(0,l.kt)("inlineCode",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"nonce"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"to"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"value"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"input"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gasPrice"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The gas price willing to be paid by the sender in wei"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"accessList"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"accessList")),(0,l.kt)("li",{parentName:"ul"},"EIP-2930 access list"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"chainId"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Chain ID that this transaction is valid on."))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"AND"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"yParity"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"r"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"s"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"All Of",(0,l.kt)("inlineCode",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"nonce"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"to"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"value"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"input"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gasPrice"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The gas price willing to be paid by the sender in wei"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"chainId"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Chain ID that this transaction is valid on."))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"AND"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"v"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"r"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"s"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))))))))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_gettransactionbyblocknumberandindex"},"eth_getTransactionByBlockNumberAndIndex"),(0,l.kt)("small",null,"Returns information about a transaction by block number and transaction index position.")),(0,l.kt)("h3",{id:"params-2-15"},"Params (2)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Block")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"One Of  ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block number  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Block tag  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"earliest"),": The lowest numbered block the client has available; ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized"),": The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; ",(0,l.kt)("inlineCode",{parentName:"li"},"safe"),": The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; ",(0,l.kt)("inlineCode",{parentName:"li"},"latest"),": The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; ",(0,l.kt)("inlineCode",{parentName:"li"},"pending"),": A sample next block built by the client on top of ",(0,l.kt)("inlineCode",{parentName:"li"},"latest")," and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for ",(0,l.kt)("inlineCode",{parentName:"li"},"finalized")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"safe")," block MUST be responded to with ",(0,l.kt)("inlineCode",{parentName:"li"},"-39001: Unknown block")," error")))))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Transaction index")," ",(0,l.kt)("strong",{parentName:"li"},"(required)"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("h3",{id:"result-51"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Transaction information"),": "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"All Of",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"blockHash"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"blockNumber"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"from"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"hash"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"transactionIndex"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"AND"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"One Of  ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"All Of",(0,l.kt)("inlineCode",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"nonce"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"to"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"value"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"input"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"maxPriorityFeePerGas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Maximum fee per gas the sender is willing to pay to miners in wei"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"maxFeePerGas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"accessList"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"accessList")),(0,l.kt)("li",{parentName:"ul"},"EIP-2930 access list"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"chainId"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Chain ID that this transaction is valid on."))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"AND"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"yParity"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"r"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"s"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"All Of",(0,l.kt)("inlineCode",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"nonce"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"to"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"value"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"input"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gasPrice"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The gas price willing to be paid by the sender in wei"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"accessList"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"accessList")),(0,l.kt)("li",{parentName:"ul"},"EIP-2930 access list"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"chainId"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Chain ID that this transaction is valid on."))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"AND"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"yParity"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"r"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"s"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"All Of",(0,l.kt)("inlineCode",{parentName:"li"},"object"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"type"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"nonce"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"to"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gas"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"value"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"input"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gasPrice"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The gas price willing to be paid by the sender in wei"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"chainId"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Chain ID that this transaction is valid on."))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"AND"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"v"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"r"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"s"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))))))))),(0,l.kt)("details",null,(0,l.kt)("summary",null,(0,l.kt)("h2",{id:"eth_gettransactionreceipt"},"eth_getTransactionReceipt"),(0,l.kt)("small",null,"Returns the receipt of a transaction by transaction hash.")),(0,l.kt)("h3",{id:"params-1-17"},"Params (1)"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("em",{parentName:"li"},"Transaction hash"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("h3",{id:"result-52"},"Result"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Receipt Information"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"object")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"transactionHash"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"transactionIndex"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"blockHash"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"blockNumber"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"from"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"to"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Address of the receiver or null in a contract creation transaction."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"cumulativeGasUsed"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The sum of gas used by this transaction and all preceding transactions in the same block."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"gasUsed"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The amount of gas used for this specific transaction alone."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"contractAddress"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"One Of  ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"hex encoded address  ",(0,l.kt)("inlineCode",{parentName:"li"},"string")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"OR"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"null")))),(0,l.kt)("li",{parentName:"ul"},"The contract address created, if the transaction was a contract creation, otherwise null."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"logs"),": ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Array of ",(0,l.kt)("em",{parentName:"li"},"logs")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"logsBloom"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"root"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The post-transaction state root. Only specified for transactions included before the Byzantium upgrade."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"status"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Either 1 (success) or 0 (failure). Only specified for transactions included after the Byzantium upgrade."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"effectiveGasPrice"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The actual value per gas deducted from the senders account. Before EIP-1559, this is equal to the transaction's gas price. After, it is equal to baseFeePerGas + min(maxFeePerGas - baseFeePerGas, maxPriorityFeePerGas)."))))))}k.isMDXComponent=!0},5162:(e,t,a)=>{a.d(t,{Z:()=>r});var n=a(7294),l=a(6010);const i="tabItem_Ymn6";function r(e){let{children:t,hidden:a,className:r}=e;return n.createElement("div",{role:"tabpanel",className:(0,l.Z)(i,r),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>C});var n=a(7462),l=a(7294),i=a(6010),r=a(2466),m=a(6550),s=a(1980),o=a(7392),p=a(12);function k(e){return function(e){return l.Children.map(e,(e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:l}}=e;return{value:t,label:a,attributes:n,default:l}}))}function u(e){const{values:t,children:a}=e;return(0,l.useMemo)((()=>{const e=t??k(a);return function(e){const t=(0,o.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function d(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function N(e){let{queryString:t=!1,groupId:a}=e;const n=(0,m.k6)(),i=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s._X)(i),(0,l.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(n.location.search);t.set(i,e),n.replace({...n.location,search:t.toString()})}),[i,n])]}function c(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,i=u(e),[r,m]=(0,l.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:i}))),[s,o]=N({queryString:a,groupId:n}),[k,c]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,i]=(0,p.Nk)(a);return[n,(0,l.useCallback)((e=>{a&&i.set(e)}),[a,i])]}({groupId:n}),h=(()=>{const e=s??k;return d({value:e,tabValues:i})?e:null})();(0,l.useLayoutEffect)((()=>{h&&m(h)}),[h]);return{selectedValue:r,selectValue:(0,l.useCallback)((e=>{if(!d({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);m(e),o(e),c(e)}),[o,c,i]),tabValues:i}}var h=a(2389);const g="tabList__CuJ",b="tabItem_LNqP";function f(e){let{className:t,block:a,selectedValue:m,selectValue:s,tabValues:o}=e;const p=[],{blockElementScrollPositionUntilNextRender:k}=(0,r.o5)(),u=e=>{const t=e.currentTarget,a=p.indexOf(t),n=o[a].value;n!==m&&(k(t),s(n))},d=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const a=p.indexOf(e.currentTarget)+1;t=p[a]??p[0];break}case"ArrowLeft":{const a=p.indexOf(e.currentTarget)-1;t=p[a]??p[p.length-1];break}}t?.focus()};return l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":a},t)},o.map((e=>{let{value:t,label:a,attributes:r}=e;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:m===t?0:-1,"aria-selected":m===t,key:t,ref:e=>p.push(e),onKeyDown:d,onClick:u},r,{className:(0,i.Z)("tabs__item",b,r?.className,{"tabs__item--active":m===t})}),a??t)})))}function y(e){let{lazy:t,children:a,selectedValue:n}=e;const i=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===n));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return l.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function v(e){const t=c(e);return l.createElement("div",{className:(0,i.Z)("tabs-container",g)},l.createElement(f,(0,n.Z)({},e,t)),l.createElement(y,(0,n.Z)({},e,t)))}function C(e){const t=(0,h.Z)();return l.createElement(v,(0,n.Z)({key:String(t)},e))}}}]);