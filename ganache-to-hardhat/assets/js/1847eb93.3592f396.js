"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[2133],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>u});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),c=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(r),m=n,u=d["".concat(l,".").concat(m)]||d[m]||h[m]||o;return r?a.createElement(u,i(i({ref:t},p),{},{components:r})):a.createElement(u,i({ref:t},p))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:n,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},72540:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=r(87462),n=(r(67294),r(3905));const o={sidebar_position:4,description:"Learn about the MetaMask JSON-RPC API."},i="JSON-RPC API",s={unversionedId:"concepts/rpc-api",id:"concepts/rpc-api",title:"JSON-RPC API",description:"Learn about the MetaMask JSON-RPC API.",source:"@site/wallet/concepts/rpc-api.md",sourceDirName:"concepts",slug:"/concepts/rpc-api",permalink:"/ganache-to-hardhat/wallet/concepts/rpc-api",draft:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/wallet/concepts/rpc-api.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,description:"Learn about the MetaMask JSON-RPC API."},sidebar:"walletSidebar",previous:{title:"Ethereum provider API",permalink:"/ganache-to-hardhat/wallet/concepts/provider-api"},next:{title:"Convenience libraries",permalink:"/ganache-to-hardhat/wallet/concepts/convenience-libraries"}},l={},c=[{value:"Restricted methods",id:"restricted-methods",level:2},{value:"Unrestricted methods",id:"unrestricted-methods",level:2}],p={toc:c},d="wrapper";function h(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"json-rpc-api"},"JSON-RPC API"),(0,n.kt)("p",null,"MetaMask uses the ",(0,n.kt)("a",{parentName:"p",href:"/ganache-to-hardhat/wallet/reference/provider-api#windowethereumrequestargs"},(0,n.kt)("inlineCode",{parentName:"a"},"window.ethereum.request(args)")),"\nmethod of the ",(0,n.kt)("a",{parentName:"p",href:"/ganache-to-hardhat/wallet/concepts/provider-api"},"provider API")," to wrap a JSON-RPC API.\nThe JSON-RPC API contains standard Ethereum JSON-RPC API methods and MetaMask-specific methods."),(0,n.kt)("admonition",{title:"MetaMask API Playground",type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"The RPC methods are documented in the interactive\n",(0,n.kt)("a",{parentName:"p",href:"/wallet/reference/eth_subscribe"},"MetaMask JSON-RPC API Playground"),".")),(0,n.kt)("p",null,"Methods in the API playground may have the following tags:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"MetaMask")," - These methods behave in ways specific to MetaMask, and may or may not be supported\nby other wallets.\nSome of these methods are documented in more detail on the ",(0,n.kt)("a",{parentName:"li",href:"/ganache-to-hardhat/wallet/reference/rpc-api"},"JSON-RPC reference"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Restricted")," - These methods are ",(0,n.kt)("a",{parentName:"li",href:"#restricted-methods"},"restricted"),", which require requesting\npermission using ",(0,n.kt)("a",{parentName:"li",href:"/wallet/reference/wallet_requestpermissions"},(0,n.kt)("inlineCode",{parentName:"a"},"wallet_requestPermissions")),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Mobile")," - These methods are only available on MetaMask Mobile."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Ethereum API")," - These are standard Ethereum JSON-RPC API methods.\nSee the ",(0,n.kt)("a",{parentName:"li",href:"https://eth.wiki/json-rpc/API#json-rpc-methods"},"Ethereum wiki")," for more information on\nthese methods.")),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"All RPC method requests can return errors.\nMake sure to handle errors for every call to\n",(0,n.kt)("a",{parentName:"p",href:"/ganache-to-hardhat/wallet/reference/provider-api#windowethereumrequestargs"},(0,n.kt)("inlineCode",{parentName:"a"},"window.ethereum.request(args)")),".")),(0,n.kt)("h2",{id:"restricted-methods"},"Restricted methods"),(0,n.kt)("p",null,"MetaMask introduced web3 wallet permissions in ",(0,n.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-2255"},"EIP-2255"),".\nIn this permissions system, each RPC method is restricted or unrestricted.\nIf a method is restricted, a dapp must request permission to call it using\n",(0,n.kt)("a",{parentName:"p",href:"/wallet/reference/wallet_requestpermissions"},(0,n.kt)("inlineCode",{parentName:"a"},"wallet_requestPermissions")),".\nUnder the hood, permissions are plain, JSON-compatible objects, with fields that are mostly used\ninternally by MetaMask."),(0,n.kt)("p",null,"Outside of ",(0,n.kt)("a",{parentName:"p",href:"/snaps/reference/rpc-api/#restricted-methods"},"Snaps restricted methods"),", the only\nrestricted method is ",(0,n.kt)("a",{parentName:"p",href:"/wallet/reference/eth_accounts"},(0,n.kt)("inlineCode",{parentName:"a"},"eth_accounts")),", which allows you to access\nthe user's Ethereum accounts.\nMore restricted methods will be added in the future."),(0,n.kt)("h2",{id:"unrestricted-methods"},"Unrestricted methods"),(0,n.kt)("p",null,"Unrestricted methods do not require requesting permission to call them, but they might still rely on\npermissions to succeed (for example, the signing methods require calling the restricted\n",(0,n.kt)("a",{parentName:"p",href:"/wallet/reference/eth_accounts"},(0,n.kt)("inlineCode",{parentName:"a"},"eth_accounts"))," method), or they might require confirmation by the\nuser (for example, ",(0,n.kt)("a",{parentName:"p",href:"/wallet/reference/wallet_addethereumchain"},(0,n.kt)("inlineCode",{parentName:"a"},"wallet_addEthereumChain")),")."),(0,n.kt)("p",null,"See the ",(0,n.kt)("a",{parentName:"p",href:"/ganache-to-hardhat/wallet/reference/rpc-api"},"JSON-RPC API reference")," for some MetaMask-specific unrestricted\nmethods and examples of how to implement them.\nFor the full list of MetaMask JSON-RPC API methods, see the\n",(0,n.kt)("a",{parentName:"p",href:"/wallet/reference/eth_subscribe"},"API playground"),"."))}h.isMDXComponent=!0}}]);