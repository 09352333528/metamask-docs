"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[3805],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>v});var a=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var p=a.createContext({}),c=function(e){var r=a.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},l=function(e){var r=c(e.components);return a.createElement(p.Provider,{value:r},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},u=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=c(t),u=n,v=m["".concat(p,".").concat(u)]||m[u]||d[u]||o;return t?a.createElement(v,s(s({ref:r},l),{},{components:t})):a.createElement(v,s({ref:r},l))}));function v(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,s=new Array(o);s[0]=u;var i={};for(var p in r)hasOwnProperty.call(r,p)&&(i[p]=r[p]);i.originalType=e,i[m]="string"==typeof e?e:n,s[1]=i;for(var c=2;c<o;c++)s[c]=t[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},45294:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=t(87462),n=(t(67294),t(3905));const o={description:"Access a user's MetaMask provider using metamask-extension-provider.",sidebar_position:12},s="Access a user's MetaMask provider",i={unversionedId:"how-to/access-provider",id:"how-to/access-provider",title:"Access a user's MetaMask provider",description:"Access a user's MetaMask provider using metamask-extension-provider.",source:"@site/wallet/how-to/access-provider.md",sourceDirName:"how-to",slug:"/how-to/access-provider",permalink:"/remove-flask-from-homepage/wallet/how-to/access-provider",draft:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/wallet/how-to/access-provider.md",tags:[],version:"current",sidebarPosition:12,frontMatter:{description:"Access a user's MetaMask provider using metamask-extension-provider.",sidebar_position:12},sidebar:"walletSidebar",previous:{title:"Manage permissions",permalink:"/remove-flask-from-homepage/wallet/how-to/manage-permissions"},next:{title:"Onboard users",permalink:"/remove-flask-from-homepage/wallet/how-to/onboard-users"}},p={},c=[{value:"Use <code>@metamask/providers</code>",id:"use-metamaskproviders",level:2}],l={toc:c},m="wrapper";function d(e){let{components:r,...t}=e;return(0,n.kt)(m,(0,a.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"access-a-users-metamask-provider"},"Access a user's MetaMask provider"),(0,n.kt)("p",null,"Use the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/MetaMask/providers"},(0,n.kt)("inlineCode",{parentName:"a"},"@metamask/providers"))," module to access a user's\nMetaMask provider from other sources, such as external extension providers and inpage providers."),(0,n.kt)("p",null,"The accounts provided by this provider are the user's MetaMask accounts.\nWhen sending signing requests to this provider, MetaMask prompts the user to sign with their accounts."),(0,n.kt)("p",null,"This module works in Chrome and Firefox."),(0,n.kt)("h2",{id:"use-metamaskproviders"},"Use ",(0,n.kt)("inlineCode",{parentName:"h2"},"@metamask/providers")),(0,n.kt)("p",null,"Install ",(0,n.kt)("inlineCode",{parentName:"p"},"@metamask/providers")," using the following command:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @metamask/providers\n")),(0,n.kt)("p",null,"Initialize the provider using the following code:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'import { initializeProvider } from "@metamask/providers";\n\n// Create a stream to a remote provider\nconst metamaskStream = new LocalMessageDuplexStream({\n    name: "inpage",\n    target: "contentscript",\n});\n\n// Initialize the provider and set it as window.ethereum\ninitializeProvider({\n    connectionStream: metamaskStream,\n});\n')),(0,n.kt)("p",null,"Create an external extension provider using the following code:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'import { createExternalExtensionProvider } from "@metamask/providers";\n\nlet provider = createExternalExtensionProvider();\nconst accounts = await provider.request({ method: "eth_requestAccounts" });\n')))}d.isMDXComponent=!0}}]);