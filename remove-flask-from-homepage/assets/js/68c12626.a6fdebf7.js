"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[3054],{3905:(e,a,t)=>{t.d(a,{Zo:()=>c,kt:()=>f});var n=t(67294);function s(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){s(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,s=function(e,a){if(null==e)return{};var t,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(s[t]=e[t]);return s}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var p=n.createContext({}),l=function(e){var a=n.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},c=function(e){var a=l(e.components);return n.createElement(p.Provider,{value:a},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},d=n.forwardRef((function(e,a){var t=e.components,s=e.mdxType,r=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=l(t),d=s,f=m["".concat(p,".").concat(d)]||m[d]||u[d]||r;return t?n.createElement(f,o(o({ref:a},c),{},{components:t})):n.createElement(f,o({ref:a},c))}));function f(e,a){var t=arguments,s=a&&a.mdxType;if("string"==typeof e||s){var r=t.length,o=new Array(r);o[0]=d;var i={};for(var p in a)hasOwnProperty.call(a,p)&&(i[p]=a[p]);i.originalType=e,i[m]="string"==typeof e?e:s,o[1]=i;for(var l=2;l<r;l++)o[l]=t[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},70986:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var n=t(87462),s=(t(67294),t(3905));const r={description:"Learn about the Snaps system at a high level.",sidebar_position:1},o="About Snaps",i={unversionedId:"learn/about-snaps/index",id:"learn/about-snaps/index",title:"About Snaps",description:"Learn about the Snaps system at a high level.",source:"@site/snaps/learn/about-snaps/index.md",sourceDirName:"learn/about-snaps",slug:"/learn/about-snaps/",permalink:"/remove-flask-from-homepage/snaps/learn/about-snaps/",draft:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/snaps/learn/about-snaps/index.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{description:"Learn about the Snaps system at a high level.",sidebar_position:1},sidebar:"snapsSidebar",previous:{title:"Learn",permalink:"/remove-flask-from-homepage/snaps/learn"},next:{title:"Snaps APIs",permalink:"/remove-flask-from-homepage/snaps/learn/about-snaps/apis"}},p={},l=[{value:"Technical overview",id:"technical-overview",level:2},{value:"Permissions",id:"permissions",level:3},{value:"APIs",id:"apis",level:3},{value:"User interface",id:"user-interface",level:3},{value:"Lifecycle",id:"lifecycle",level:3}],c={toc:l},m="wrapper";function u(e){let{components:a,...r}=e;return(0,s.kt)(m,(0,n.Z)({},c,r,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"about-snaps"},"About Snaps"),(0,s.kt)("p",null,"MetaMask Snaps is an open source system that allows anyone to safely extend the functionality of\nMetaMask, creating new web3 end user experiences.\nFor example, a Snap can add support for different blockchain networks, add custom account types, or\nprovide additional functionality using its own APIs.\nThis allows MetaMask to be used with a far more diverse set of protocols, dapps, and services."),(0,s.kt)("p",null,"The following diagram outlines the high-level architecture of the Snaps system:"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Snaps architecture diagram",src:t(30525).Z,width:"1512",height:"722"})),(0,s.kt)("p",null,"The following diagram illustrates how Snaps can ",(0,s.kt)("a",{parentName:"p",href:"/remove-flask-from-homepage/snaps/features/non-evm-networks"},"derive non-EVM keys")," using\n",(0,s.kt)("a",{parentName:"p",href:"/remove-flask-from-homepage/snaps/reference/snaps-api#snap_getbip32entropy"},(0,s.kt)("inlineCode",{parentName:"a"},"snap_getBip32Entropy")),",\n",(0,s.kt)("a",{parentName:"p",href:"/remove-flask-from-homepage/snaps/reference/snaps-api#snap_getbip44entropy"},(0,s.kt)("inlineCode",{parentName:"a"},"snap_getBip44Entropy")),", and\n",(0,s.kt)("a",{parentName:"p",href:"/remove-flask-from-homepage/snaps/reference/snaps-api#snap_getentropy"},(0,s.kt)("inlineCode",{parentName:"a"},"snap_getEntropy")),":"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Snaps get entropy diagram",src:t(30175).Z,width:"1512",height:"444"})),(0,s.kt)("admonition",{title:"important",type:"caution"},(0,s.kt)("p",{parentName:"admonition"},"Snaps cannot access the user's Secret Recovery Phrase.\nSnaps can only derive non-EVM keys using the provided methods.\nFurthermore, any Snap that derives keys must undergo a security audit before it can be made\navailable to MetaMask users.")),(0,s.kt)("h2",{id:"technical-overview"},"Technical overview"),(0,s.kt)("p",null,"A Snap is a JavaScript program run in an isolated and secure ",(0,s.kt)("a",{parentName:"p",href:"/remove-flask-from-homepage/snaps/learn/about-snaps/execution-environment"},"execution environment"),"."),(0,s.kt)("h3",{id:"permissions"},"Permissions"),(0,s.kt)("p",null,"By default, a Snap has no capabilities.\nIt must ",(0,s.kt)("a",{parentName:"p",href:"/remove-flask-from-homepage/snaps/how-to/request-permissions"},"request permissions")," for various capabilities to be\ngranted by the user at installation, such as accessing the network, storing data in MetaMask, or\ndisplaying dialogs.\nData stored by a Snap is only visible to that Snap, and a Snap cannot access data of other Snaps or\nof MetaMask core unless given permission to do so."),(0,s.kt)("h3",{id:"apis"},"APIs"),(0,s.kt)("p",null,"A Snap can communicate with MetaMask using the ",(0,s.kt)("a",{parentName:"p",href:"/remove-flask-from-homepage/snaps/reference/snaps-api"},"Snaps API")," and some\n",(0,s.kt)("a",{parentName:"p",href:"/wallet/reference/json-rpc-api"},"MetaMask JSON-RPC API")," methods.\nThe Snaps API allows Snaps to extend or modify the functionality of MetaMask, and communicate with\nother Snaps."),(0,s.kt)("p",null,"Dapps can also use certain MetaMask JSON-RPC API methods to install and communicate with Snaps."),(0,s.kt)("p",null,"A Snap can implement its own custom JSON-RPC API to communicate with dapps and other Snaps."),(0,s.kt)("p",null,"Learn more ",(0,s.kt)("a",{parentName:"p",href:"/remove-flask-from-homepage/snaps/learn/about-snaps/apis"},"about the Snaps APIs"),"."),(0,s.kt)("h3",{id:"user-interface"},"User interface"),(0,s.kt)("p",null,"A Snap must represent itself and what it does to the end user.\nThe user can see their installed Snaps in the MetaMask settings page.\nFor each Snap, the user can:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"See most of its manifest file data."),(0,s.kt)("li",{parentName:"ul"},"See its execution status (running, stopped, or crashed)."),(0,s.kt)("li",{parentName:"ul"},"Enable and disable the Snap.")),(0,s.kt)("p",null,"Other than the settings page, a Snap can ",(0,s.kt)("a",{parentName:"p",href:"/remove-flask-from-homepage/snaps/features/custom-ui"},"modify the MetaMask UI")," only\nby ",(0,s.kt)("a",{parentName:"p",href:"/remove-flask-from-homepage/snaps/reference/snaps-api#snap_dialog"},"displaying a dialog")," or\n",(0,s.kt)("a",{parentName:"p",href:"/remove-flask-from-homepage/snaps/reference/entry-points#ontransaction"},"displaying transaction insights"),"."),(0,s.kt)("p",null,"This means that most Snaps must rely on companion dapps and their custom JSON-RPC API methods to\npresent their data to the user."),(0,s.kt)("admonition",{type:"note"},(0,s.kt)("p",{parentName:"admonition"},"Providing more ways for Snaps to modify the MetaMask UI is an important goal of the Snaps system,\nand over time more and more Snaps will be able to contain their user interfaces entirely within\nMetaMask itself.")),(0,s.kt)("h3",{id:"lifecycle"},"Lifecycle"),(0,s.kt)("p",null,"A Snap wakes up in response to messages or events, and shuts down when idle.\nAlso, if MetaMask detects that a Snap becomes unresponsive, it shuts the Snap down."),(0,s.kt)("p",null,"A Snap is considered unresponsive if one of the following occurs:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"It hasn't received a JSON-RPC request for 30 seconds."),(0,s.kt)("li",{parentName:"ul"},"It takes more than 60 seconds to process a JSON-RPC request.")),(0,s.kt)("p",null,"Stopped Snaps start whenever they receive a JSON-RPC request, unless they're disabled.\nIf a Snap is disabled, the user must re-enable it before it can start again."))}u.isMDXComponent=!0},30525:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/snaps-architecture-de7180cbb5327cca7ed91f3cad2b40c7.png"},30175:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/snaps-getentropy-6cccbe90c571038546e84cc3826b506b.png"}}]);