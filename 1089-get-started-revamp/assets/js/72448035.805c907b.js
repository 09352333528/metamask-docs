"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[7612],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=l(n),g=r,u=d["".concat(c,".").concat(g)]||d[g]||m[g]||s;return n?a.createElement(u,i(i({ref:t},p),{},{components:n})):a.createElement(u,i({ref:t},p))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=g;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[d]="string"==typeof e?e:r,i[1]=o;for(var l=2;l<s;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},34545:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var a=n(87462),r=(n(67294),n(3905));const s={description:"Use MetaMask SDK to connect and sign in a single interaction.",sidebar_position:1,tags:["JavaScript SDK","iOS SDK"]},i="Connect and sign",o={unversionedId:"how-to/sign-data/connect-and-sign",id:"how-to/sign-data/connect-and-sign",title:"Connect and sign",description:"Use MetaMask SDK to connect and sign in a single interaction.",source:"@site/wallet/how-to/sign-data/connect-and-sign.md",sourceDirName:"how-to/sign-data",slug:"/how-to/sign-data/connect-and-sign",permalink:"/1089-get-started-revamp/wallet/how-to/sign-data/connect-and-sign",draft:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/wallet/how-to/sign-data/connect-and-sign.md",tags:[{label:"JavaScript SDK",permalink:"/1089-get-started-revamp/wallet/tags/java-script-sdk"},{label:"iOS SDK",permalink:"/1089-get-started-revamp/wallet/tags/i-os-sdk"}],version:"current",sidebarPosition:1,frontMatter:{description:"Use MetaMask SDK to connect and sign in a single interaction.",sidebar_position:1,tags:["JavaScript SDK","iOS SDK"]},sidebar:"walletSidebar",previous:{title:"Sign data",permalink:"/1089-get-started-revamp/wallet/how-to/sign-data/"},next:{title:"Sign in with Ethereum",permalink:"/1089-get-started-revamp/wallet/how-to/sign-data/siwe"}},c={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Use the connectAndSign method",id:"use-the-connectandsign-method",level:2},{value:"Examples",id:"examples",level:2}],p={toc:l},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"connect-and-sign"},"Connect and sign"),(0,r.kt)("p",null,"You can connect to MetaMask and sign data in a single interaction from your JavaScript or iOS dapp\nusing ",(0,r.kt)("a",{parentName:"p",href:"/1089-get-started-revamp/wallet/concepts/sdk/"},"MetaMask SDK"),"."),(0,r.kt)("p",null,"The SDK's ",(0,r.kt)("inlineCode",{parentName:"p"},"connectAndSign")," method provides a streamlined approach for dapps to interact with MetaMask.\nThis method combines the ",(0,r.kt)("a",{parentName:"p",href:"/wallet/reference/eth_requestAccounts"},(0,r.kt)("inlineCode",{parentName:"a"},"eth_requestAccounts"))," and ",(0,r.kt)("a",{parentName:"p",href:"/wallet/reference/personal_sign"},(0,r.kt)("inlineCode",{parentName:"a"},"personal_sign"))," RPC methods, executing them sequentially.\n",(0,r.kt)("inlineCode",{parentName:"p"},"connectAndSign")," takes one parameter, the message string to be signed, and passes the message and\nthe output of ",(0,r.kt)("a",{parentName:"p",href:"/wallet/reference/eth_requestAccounts"},(0,r.kt)("inlineCode",{parentName:"a"},"eth_requestAccounts"))," directly to ",(0,r.kt)("a",{parentName:"p",href:"/wallet/reference/personal_sign"},(0,r.kt)("inlineCode",{parentName:"a"},"personal_sign")),"."),(0,r.kt)("p",null,"This method enhances dapp user experience, especially on mobile platforms, by allowing users to\nconnect to MetaMask and sign a message in a single interaction, requiring only one switch between\nthe mobile dapp and MetaMask Mobile."),(0,r.kt)("p",{align:"center"},(0,r.kt)("video",{width:"350",controls:!0},(0,r.kt)("source",{src:"/connect-and-sign.mp4",type:"video/mp4"}))),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"MetaMask SDK set up in your ",(0,r.kt)("a",{parentName:"p",href:"/1089-get-started-revamp/wallet/how-to/use-sdk/javascript/"},"JavaScript")," or\n",(0,r.kt)("a",{parentName:"p",href:"/1089-get-started-revamp/wallet/how-to/use-sdk/mobile/ios"},"iOS")," dapp.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"MetaMask Mobile version 7.10 or later.\nYour users must have an updated version of MetaMask Mobile for this feature to work correctly.\nFor older versions of MetaMask, this function may not work as expected."))),(0,r.kt)("h2",{id:"use-the-connectandsign-method"},"Use the connectAndSign method"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"connectAndSign")," method as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const connectAndSign = async () => {\n  try {\n    const signResult = await sdk?.connectAndSign({\n      msg: "Connect + Sign message",\n    });\n    setResponse(signResult);\n  } catch (err) {\n    console.warn(`failed to connect..`, err);\n  }\n};\n')),(0,r.kt)("p",null,"To invoke ",(0,r.kt)("inlineCode",{parentName:"p"},"connectAndSign"),":"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Ensure the ",(0,r.kt)("inlineCode",{parentName:"li"},"MetaMaskSDK")," instance (",(0,r.kt)("inlineCode",{parentName:"li"},"sdk")," in this context) is properly initialized and available."),(0,r.kt)("li",{parentName:"ol"},"Call ",(0,r.kt)("inlineCode",{parentName:"li"},"connectAndSign")," with the message to be signed."),(0,r.kt)("li",{parentName:"ol"},"Handle the promise to process the response or catch any errors.")),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,"The following is an example of using the ",(0,r.kt)("inlineCode",{parentName:"p"},"connectAndSign")," method in a React dapp, integrating it\ninto a functional component:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'import React, { useState } from "react";\nimport { useSDK } from "@metamask/sdk-react";\n\nfunction MyComponent() {\n  const { sdk } = useSDK();\n  const [signedMessage, setSignedMessage] = useState("");\n\n  const handleConnectAndSign = async () => {\n    try {\n      const message = "Your message here";\n      const signature = await sdk.connectAndSign({ msg: message });\n      setSignedMessage(signature);\n    } catch (error) {\n      console.error("Error in signing:", error);\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={handleConnectAndSign}>Connect and Sign</button>\n      {signedMessage && <p>Signed Message: {signedMessage}</p>}\n    </div>\n  );\n}\n')),(0,r.kt)("p",null,"For a comprehensive React example, see the\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/MetaMask/metamask-sdk/blob/main/packages/examples/create-react-app/src/App.tsx"},(0,r.kt)("inlineCode",{parentName:"a"},"App.tsx")),"\nfile of the example React dapp."),(0,r.kt)("p",null,"For examples of using the ",(0,r.kt)("inlineCode",{parentName:"p"},"connectAndSign")," function in Next.js and Vue.js, see the\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/MetaMask/metamask-sdk/tree/main/packages/examples/nextjs-demo"},"example Next.js dapp"),"\nand ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/MetaMask/metamask-sdk/tree/main/packages/examples/vuejs"},"example Vue.js dapp"),"\nin the JavaScript SDK GitHub repository."))}m.isMDXComponent=!0}}]);