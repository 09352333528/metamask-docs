"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[3316],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},v=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(t),v=a,d=m["".concat(l,".").concat(v)]||m[v]||u[v]||i;return t?r.createElement(d,o(o({ref:n},c),{},{components:t})):r.createElement(d,o({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=v;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[m]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}v.displayName="MDXCreateElement"},81730:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=t(87462),a=(t(67294),t(3905));const i={sidebar_position:3},o="Use environment variables",s={unversionedId:"how-to/use-environment-variables",id:"how-to/use-environment-variables",title:"Use environment variables",description:"You can use environment variables to compile your Snap.",source:"@site/snaps/how-to/use-environment-variables.md",sourceDirName:"how-to",slug:"/how-to/use-environment-variables",permalink:"/746-snaps-env-vars/snaps/how-to/use-environment-variables",draft:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/snaps/how-to/use-environment-variables.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"snapsSidebar",previous:{title:"Communicate errors",permalink:"/746-snaps-env-vars/snaps/how-to/communicate-errors"},next:{title:"Design a Snap installation flow",permalink:"/746-snaps-env-vars/snaps/how-to/design-a-snap"}},l={},p=[{value:"Use environment variables on the command line",id:"use-environment-variables-on-the-command-line",level:2},{value:"Use environment variables in a <code>.env</code> file",id:"use-environment-variables-in-a-env-file",level:2}],c={toc:p},m="wrapper";function u(e){let{components:n,...t}=e;return(0,a.kt)(m,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"use-environment-variables"},"Use environment variables"),(0,a.kt)("p",null,"You can use environment variables to compile your Snap."),(0,a.kt)("h2",{id:"use-environment-variables-on-the-command-line"},"Use environment variables on the command line"),(0,a.kt)("p",null,"You can specify environment variables on the command line.\nFor example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"PUBLIC_KEY=abc123 SNAP_ENV=dev\n")),(0,a.kt)("p",null,"Then, build your Snap using the ",(0,a.kt)("a",{parentName:"p",href:"/746-snaps-env-vars/snaps/reference/cli/subcommands"},"Snaps CLI"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"yarn mm-snap build\n")),(0,a.kt)("h2",{id:"use-environment-variables-in-a-env-file"},"Use environment variables in a ",(0,a.kt)("inlineCode",{parentName:"h2"},".env")," file"),(0,a.kt)("p",null,"You can specify environment variables in a ",(0,a.kt)("inlineCode",{parentName:"p"},".env")," file.\nFor example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text",metastring:'title=".env"',title:'".env"'},"PUBLIC_KEY=abc123\nSNAP_ENV=dev\n")),(0,a.kt)("p",null,"Use the environment variables in your Snap's\n",(0,a.kt)("a",{parentName:"p",href:"/746-snaps-env-vars/snaps/learn/about-snaps/files#configuration-file"},"configuration file")," by modifying the browserify object:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="snap.config.js"',title:'"snap.config.js"'},'const envify = require("envify/custom");\nrequire("dotenv").config();\n\nmodule.exports = {\n    cliOptions: {\n        src: "./src/index.ts",\n        port: 8080,\n    },\n    bundlerCustomizer: (bundler) => {\n        bundler.transform(\n            envify({\n                SNAP_ENV: process.env.SNAP_ENV,\n                PUBLIC_KEY: process.env.PUBLIC_KEY,\n            }),\n        );\n    },\n};\n')),(0,a.kt)("p",null,"You can also use environment variables in directly in your Snap.\nFor example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="index.ts"',title:'"index.ts"'},'import { panel, text, heading } from \'@metamask/snaps-ui\';\n\nawait snap.request({\n    method: "snap_dialog",\n    params: {\n        type: "Alert",\n        content: panel([\n            heading("This custom alert is just for display purposes."),\n            text("SNAP_ENV is ${process.env.SNAP_ENV}, PUBLIC_KEY is ${process.env.PUBLIC_KEY}"),\n        ]),\n    },\n});\n')))}u.isMDXComponent=!0}}]);