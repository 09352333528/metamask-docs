"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[8867],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>f});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),c=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},s=function(e){var t=c(e.components);return r.createElement(o.Provider,{value:t},e.children)},y="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),y=c(a),u=n,f=y["".concat(o,".").concat(u)]||y[u]||m[u]||i;return a?r.createElement(f,p(p({ref:t},s),{},{components:a})):r.createElement(f,p({ref:t},s))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,p=new Array(i);p[0]=u;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[y]="string"==typeof e?e:n,p[1]=l;for(var c=2;c<i;c++)p[c]=a[c];return r.createElement.apply(null,p)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},62851:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>p,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=a(87462),n=(a(67294),a(3905));const i={},p="Type alias: ExactOptionalize<Schema>",l={unversionedId:"reference/keyring-api/type-aliases/ExactOptionalize",id:"reference/keyring-api/type-aliases/ExactOptionalize",title:"Type alias: ExactOptionalize<Schema>",description:"Make optional all properties that have the ExactOptionalTag type.",source:"@site/snaps/reference/keyring-api/type-aliases/ExactOptionalize.md",sourceDirName:"reference/keyring-api/type-aliases",slug:"/reference/keyring-api/type-aliases/ExactOptionalize",permalink:"/zs/snaps-keyring-revamp/snaps/reference/keyring-api/type-aliases/ExactOptionalize",draft:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/snaps/reference/keyring-api/type-aliases/ExactOptionalize.md",tags:[],version:"current",frontMatter:{},sidebar:"snapsSidebar",previous:{title:"Type alias: ExactOptionalTag",permalink:"/zs/snaps-keyring-revamp/snaps/reference/keyring-api/type-aliases/ExactOptionalTag"},next:{title:"Type alias: ExcludeType<Obj, Type>",permalink:"/zs/snaps-keyring-revamp/snaps/reference/keyring-api/type-aliases/ExcludeType"}},o={},c=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Source",id:"source",level:2}],s={toc:c},y="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(y,(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"type-alias-exactoptionalizeschema"},"Type alias: ExactOptionalize",(0,n.kt)("inlineCode",{parentName:"h1"},"<Schema>")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"type ExactOptionalize<Schema>: OmitBy<Schema, ExactOptionalTag> & Partial<ExcludeType<PickBy<Schema, ExactOptionalTag>, ExactOptionalTag>>;\n")),(0,n.kt)("p",null,"Make optional all properties that have the ",(0,n.kt)("inlineCode",{parentName:"p"},"ExactOptionalTag")," type."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"type Foo = { a: string | ExactOptionalTag; b: number};\ntype Bar = ExactOptionalize<Foo>;\n// Bar = { a?: string; b: number}\n")),(0,n.kt)("h2",{id:"type-parameters"},"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Parameter"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Schema")," extends ",(0,n.kt)("inlineCode",{parentName:"td"},"object"))))),(0,n.kt)("h2",{id:"source"},"Source"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/MetaMask/keyring-api/blob/a868ea2/src/superstruct.ts#L39"},"external/keyring-api/src/superstruct.ts:39")))}m.isMDXComponent=!0}}]);