"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[1372],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),p=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(o.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(n),y=a,d=u["".concat(o,".").concat(y)]||u[y]||g[y]||i;return n?r.createElement(d,s(s({ref:t},l),{},{components:n})):r.createElement(d,s({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=y;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c[u]="string"==typeof e?e:a,s[1]=c;for(var p=2;p<i;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},15269:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>g,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const i={sidebar_label:"KeyringAccountStruct"},s="Variable: KeyringAccountStruct",c={unversionedId:"reference/keyring-api/Variables/variable.KeyringAccountStruct",id:"reference/keyring-api/Variables/variable.KeyringAccountStruct",title:"Variable: KeyringAccountStruct",description:"Source",source:"@site/snaps/reference/keyring-api/04-Variables/02-variable.KeyringAccountStruct.md",sourceDirName:"reference/keyring-api/04-Variables",slug:"/reference/keyring-api/Variables/variable.KeyringAccountStruct",permalink:"/cm/snap-get-locale/snaps/reference/keyring-api/Variables/variable.KeyringAccountStruct",draft:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/snaps/reference/keyring-api/04-Variables/02-variable.KeyringAccountStruct.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"KeyringAccountStruct"},sidebar:"snapsSidebar",previous:{title:"SubmitRequestResponse",permalink:"/cm/snap-get-locale/snaps/reference/keyring-api/Type Aliases/type-alias.SubmitRequestResponse"},next:{title:"KeyringJsonRpcRequestStruct",permalink:"/cm/snap-get-locale/snaps/reference/keyring-api/Variables/variable.KeyringJsonRpcRequestStruct"}},o={},p=[{value:"Source",id:"source",level:2}],l={toc:p},u="wrapper";function g(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"variable-keyringaccountstruct"},"Variable: KeyringAccountStruct"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'const KeyringAccountStruct: Struct< {\n  address: string;\n  id: string;\n  name: string;\n  options: null | Record< string, Json >;\n  supportedMethods: ("personal_sign" | "eth_sendTransaction" | "eth_sign" | "eth_signTransaction" | "eth_signTypedData" | "eth_signTypedData_v1" | "eth_signTypedData_v2" | "eth_signTypedData_v3" | "eth_signTypedData_v4")[];\n  type: "eip155:eoa" | "eip155:erc4337";\n }, {\n  address: Struct< string, null >;\n  id: Struct< string, null >;\n  name: Struct< string, null >;\n  options: Struct< null | Record< string, Json >, null >;\n  supportedMethods: Struct< ("personal_sign" | "eth_sendTransaction" | "eth_sign" | "eth_signTransaction" | "eth_signTypedData" | "eth_signTypedData_v1" | "eth_signTypedData_v2" | "eth_signTypedData_v3" | "eth_signTypedData_v4")[], Struct< "personal_sign" | "eth_sendTransaction" | "eth_sign" | "eth_signTransaction" | "eth_signTypedData" | "eth_signTypedData_v1" | "eth_signTypedData_v2" | "eth_signTypedData_v3" | "eth_signTypedData_v4", {\n    eth_sendTransaction: "eth_sendTransaction";\n    eth_sign: "eth_sign";\n    eth_signTransaction: "eth_signTransaction";\n    eth_signTypedData: "eth_signTypedData";\n    eth_signTypedData_v1: "eth_signTypedData_v1";\n    eth_signTypedData_v2: "eth_signTypedData_v2";\n    eth_signTypedData_v3: "eth_signTypedData_v3";\n    eth_signTypedData_v4: "eth_signTypedData_v4";\n    personal_sign: "personal_sign";\n  } > >;\n  type: Struct< "eip155:eoa" | "eip155:erc4337", {\n    eip155:eoa: "eip155:eoa";\n    eip155:erc4337: "eip155:erc4337";\n  } >;\n } >\n')),(0,a.kt)("h2",{id:"source"},"Source"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/MetaMask/keyring-api/blob/1c8eeb9/src/keyring-api.ts#L16"},"external/keyring-api/src/keyring-api.ts:16")))}g.isMDXComponent=!0}}]);